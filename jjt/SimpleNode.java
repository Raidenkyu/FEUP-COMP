/* Generated By:JJTree: Do not edit this line. SimpleNode.java Version 6.0 */
/* JavaCCOptions:MULTI=false,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true
 */

public class SimpleNode implements Node {
  protected Node parent;
  protected Node[] children;
  protected int id;
  protected String val;
  protected jmm parser;
  protected Token firstToken;
  protected Token lastToken;

  public SimpleNode(int i) {
    id = i;
  }

  public SimpleNode(jmm p, int i) {
    this(i);
    parser = p;
  }

  public void jjtOpen() {}

  public void jjtClose() {}

  public void jjtSetParent(Node n) {
    parent = n;
  }

  public Node jjtGetParent() {
    return parent;
  }

  public void jjtAddChild(Node n, int i) {
    if (children == null) {
      children = new Node[i + 1];
    } else if (i >= children.length) {
      Node c[] = new Node[i + 1];
      System.arraycopy(children, 0, c, 0, children.length);
      children = c;
    }
    children[i] = n;
  }

  public Node jjtGetChild(int i) {
    return children[i];
  }

  public int jjtGetNumChildren() {
    return (children == null) ? 0 : children.length;
  }

  public void jjtSetVal(String val) {
    this.val = val;
  }

  public String jjtGetVal() {
    return val;
  }

  public Token jjtGetFirstToken() {
    return firstToken;
  }

  public void jjtSetFirstToken(Token token) {
    this.firstToken = token;
  }

  public Token jjtGetLastToken() {
    return lastToken;
  }

  public void jjtSetLastToken(Token token) {
    this.lastToken = token;
  }

  public String toString() {
    String line = jmmTreeConstants.jjtNodeName[id];
    if (val != null)
      return line + " " + val + " " + getRange();
    else
      return line + " " + getRange();
  }

  public String toString(String prefix) {
    return prefix + toString();
  }

  public void dump(String prefix) {
    System.out.println(toString(prefix));
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode) children[i];
        if (n != null) {
          n.dump(prefix + " ");
        }
      }
    }
  }

  public int getId() {
    return id;
  }

  public int treeBeginLine() {
    if (children != null && children.length > 0)
      return children[0].treeBeginLine();
    else
      return firstToken.beginLine;
  }

  public int treeBeginColumn() {
    if (children != null && children.length > 0)
      return children[0].treeBeginColumn();
    else
      return firstToken.beginColumn;
  }

  public int treeEndLine() {
    if (children != null && children.length > 0)
      return children[children.length - 1].treeEndLine();
    else
      return lastToken.endLine;
  }

  public int treeEndColumn() {
    if (children != null && children.length > 0)
      return children[children.length - 1].treeEndColumn();
    else
      return lastToken.endColumn;
  }

  protected String getRange() {
    String rangeBegin = treeBeginLine() + ":" + treeBeginColumn();
    String rangeEnd = treeEndLine() + ":" + treeEndColumn();
    return rangeBegin + " " + rangeEnd;
  }
}

/*
 * JavaCC - OriginalChecksum=4b49059223c1a40d1b41e7d0a1629896 (do not edit this
 * line)
 */
